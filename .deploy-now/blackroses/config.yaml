version: 1.0

deploy:
  # configuration part, which is taken at the FIRST deployment of each branch
  bootstrap:
    # folders that are not copied to IONOS webspace
    excludes:
      - tests
      - node_modules
      - DOCKER_ENV
      - docker_tag
      - output.log
    # commands that are executed at the real webspace NOT at build servers AFTER copying new files
    post-deployment-remote-commands:
      - mkdir storage/logs
      - /usr/bin/php8.1-cli composer.phar install
      - /usr/bin/php8.3-cli artisan  down
      - find $(pwd) -type f -not -path "$(pwd)/logs/*" -exec chmod 664 {} \;
      - find $(pwd) -type d -not -name "logs" -exec chmod 775 {} \;
      - chmod -R o+w storage bootstrap/cache
      - /usr/bin/php8.3-cli artisan  optimize:clear
      - /usr/bin/php8.3-cli artisan  migrate --force -n
      - /usr/bin/php8.3-cli artisan  storage:link
      - /usr/bin/php8.3-cli artisan  optimize
      - /usr/bin/php8.3-cli artisan  up

  # configuration part, which is taken at ALL FURTHER deployments of this branch
  recurring:
    # folders that are not copied to IONOS webspace
    excludes:
      - tests
      - node_modules
      - DOCKER_ENV
      - docker_tag
      - output.log
      - storage
    # commands that are executed at the real webspace NOT at build servers BEFORE copying new files
    pre-deployment-remote-commands:
      - /usr/bin/php8.3-cli artisan  down
    # commands that are executed at the real webspace NOT at build servers AFTER copying new files
    post-deployment-remote-commands:
      - find $(pwd) -type f -not -path "$(pwd)/logs/*" -exec chmod 664 {} \;
      - find $(pwd) -type d -not -name "logs" -exec chmod 775 {} \;
      - chmod -R o+w storage bootstrap/cache
      - /usr/bin/php8.3-cli artisan  optimize:clear
      - /usr/bin/php8.3-cli artisan  migrate --force -n
      - /usr/bin/php8.3-cli artisan  storage:link
      - /usr/bin/php8.3-cli artisan  optimize
      - /usr/bin/php8.3-cli artisan  up

# uncomment the following lines to configure cron jobs
#runtime:
#  cron-jobs:
#    - command: my-cron-job-command # the deployment is located at $HOME/htdocs/ to execute a deployed script just prefix it accordingly
#      schedule: 0 5 * * * # run every day at 5:00
